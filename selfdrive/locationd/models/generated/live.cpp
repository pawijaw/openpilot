#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5373476707567852118) {
   out_5373476707567852118[0] = 0;
   out_5373476707567852118[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5373476707567852118[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5373476707567852118[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5373476707567852118[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5373476707567852118[5] = -sin(in_vec[1]);
   out_5373476707567852118[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5373476707567852118[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5373476707567852118[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5373476707567852118[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5373476707567852118[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5373476707567852118[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5373476707567852118[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5373476707567852118[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5373476707567852118[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5373476707567852118[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5373476707567852118[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5373476707567852118[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4552411415356430197) {
   out_4552411415356430197[0] = delta_x[0] + nom_x[0];
   out_4552411415356430197[1] = delta_x[1] + nom_x[1];
   out_4552411415356430197[2] = delta_x[2] + nom_x[2];
   out_4552411415356430197[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4552411415356430197[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4552411415356430197[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4552411415356430197[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4552411415356430197[7] = delta_x[6] + nom_x[7];
   out_4552411415356430197[8] = delta_x[7] + nom_x[8];
   out_4552411415356430197[9] = delta_x[8] + nom_x[9];
   out_4552411415356430197[10] = delta_x[9] + nom_x[10];
   out_4552411415356430197[11] = delta_x[10] + nom_x[11];
   out_4552411415356430197[12] = delta_x[11] + nom_x[12];
   out_4552411415356430197[13] = delta_x[12] + nom_x[13];
   out_4552411415356430197[14] = delta_x[13] + nom_x[14];
   out_4552411415356430197[15] = delta_x[14] + nom_x[15];
   out_4552411415356430197[16] = delta_x[15] + nom_x[16];
   out_4552411415356430197[17] = delta_x[16] + nom_x[17];
   out_4552411415356430197[18] = delta_x[17] + nom_x[18];
   out_4552411415356430197[19] = delta_x[18] + nom_x[19];
   out_4552411415356430197[20] = delta_x[19] + nom_x[20];
   out_4552411415356430197[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_649318714918938330) {
   out_649318714918938330[0] = -nom_x[0] + true_x[0];
   out_649318714918938330[1] = -nom_x[1] + true_x[1];
   out_649318714918938330[2] = -nom_x[2] + true_x[2];
   out_649318714918938330[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_649318714918938330[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_649318714918938330[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_649318714918938330[6] = -nom_x[7] + true_x[7];
   out_649318714918938330[7] = -nom_x[8] + true_x[8];
   out_649318714918938330[8] = -nom_x[9] + true_x[9];
   out_649318714918938330[9] = -nom_x[10] + true_x[10];
   out_649318714918938330[10] = -nom_x[11] + true_x[11];
   out_649318714918938330[11] = -nom_x[12] + true_x[12];
   out_649318714918938330[12] = -nom_x[13] + true_x[13];
   out_649318714918938330[13] = -nom_x[14] + true_x[14];
   out_649318714918938330[14] = -nom_x[15] + true_x[15];
   out_649318714918938330[15] = -nom_x[16] + true_x[16];
   out_649318714918938330[16] = -nom_x[17] + true_x[17];
   out_649318714918938330[17] = -nom_x[18] + true_x[18];
   out_649318714918938330[18] = -nom_x[19] + true_x[19];
   out_649318714918938330[19] = -nom_x[20] + true_x[20];
   out_649318714918938330[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5061695866448667952) {
   out_5061695866448667952[0] = 1.0;
   out_5061695866448667952[1] = 0;
   out_5061695866448667952[2] = 0;
   out_5061695866448667952[3] = 0;
   out_5061695866448667952[4] = 0;
   out_5061695866448667952[5] = 0;
   out_5061695866448667952[6] = 0;
   out_5061695866448667952[7] = 0;
   out_5061695866448667952[8] = 0;
   out_5061695866448667952[9] = 0;
   out_5061695866448667952[10] = 0;
   out_5061695866448667952[11] = 0;
   out_5061695866448667952[12] = 0;
   out_5061695866448667952[13] = 0;
   out_5061695866448667952[14] = 0;
   out_5061695866448667952[15] = 0;
   out_5061695866448667952[16] = 0;
   out_5061695866448667952[17] = 0;
   out_5061695866448667952[18] = 0;
   out_5061695866448667952[19] = 0;
   out_5061695866448667952[20] = 0;
   out_5061695866448667952[21] = 0;
   out_5061695866448667952[22] = 1.0;
   out_5061695866448667952[23] = 0;
   out_5061695866448667952[24] = 0;
   out_5061695866448667952[25] = 0;
   out_5061695866448667952[26] = 0;
   out_5061695866448667952[27] = 0;
   out_5061695866448667952[28] = 0;
   out_5061695866448667952[29] = 0;
   out_5061695866448667952[30] = 0;
   out_5061695866448667952[31] = 0;
   out_5061695866448667952[32] = 0;
   out_5061695866448667952[33] = 0;
   out_5061695866448667952[34] = 0;
   out_5061695866448667952[35] = 0;
   out_5061695866448667952[36] = 0;
   out_5061695866448667952[37] = 0;
   out_5061695866448667952[38] = 0;
   out_5061695866448667952[39] = 0;
   out_5061695866448667952[40] = 0;
   out_5061695866448667952[41] = 0;
   out_5061695866448667952[42] = 0;
   out_5061695866448667952[43] = 0;
   out_5061695866448667952[44] = 1.0;
   out_5061695866448667952[45] = 0;
   out_5061695866448667952[46] = 0;
   out_5061695866448667952[47] = 0;
   out_5061695866448667952[48] = 0;
   out_5061695866448667952[49] = 0;
   out_5061695866448667952[50] = 0;
   out_5061695866448667952[51] = 0;
   out_5061695866448667952[52] = 0;
   out_5061695866448667952[53] = 0;
   out_5061695866448667952[54] = 0;
   out_5061695866448667952[55] = 0;
   out_5061695866448667952[56] = 0;
   out_5061695866448667952[57] = 0;
   out_5061695866448667952[58] = 0;
   out_5061695866448667952[59] = 0;
   out_5061695866448667952[60] = 0;
   out_5061695866448667952[61] = 0;
   out_5061695866448667952[62] = 0;
   out_5061695866448667952[63] = 0;
   out_5061695866448667952[64] = 0;
   out_5061695866448667952[65] = 0;
   out_5061695866448667952[66] = -0.5*state[4];
   out_5061695866448667952[67] = -0.5*state[5];
   out_5061695866448667952[68] = -0.5*state[6];
   out_5061695866448667952[69] = 0;
   out_5061695866448667952[70] = 0;
   out_5061695866448667952[71] = 0;
   out_5061695866448667952[72] = 0;
   out_5061695866448667952[73] = 0;
   out_5061695866448667952[74] = 0;
   out_5061695866448667952[75] = 0;
   out_5061695866448667952[76] = 0;
   out_5061695866448667952[77] = 0;
   out_5061695866448667952[78] = 0;
   out_5061695866448667952[79] = 0;
   out_5061695866448667952[80] = 0;
   out_5061695866448667952[81] = 0;
   out_5061695866448667952[82] = 0;
   out_5061695866448667952[83] = 0;
   out_5061695866448667952[84] = 0;
   out_5061695866448667952[85] = 0;
   out_5061695866448667952[86] = 0;
   out_5061695866448667952[87] = 0.5*state[3];
   out_5061695866448667952[88] = 0.5*state[6];
   out_5061695866448667952[89] = -0.5*state[5];
   out_5061695866448667952[90] = 0;
   out_5061695866448667952[91] = 0;
   out_5061695866448667952[92] = 0;
   out_5061695866448667952[93] = 0;
   out_5061695866448667952[94] = 0;
   out_5061695866448667952[95] = 0;
   out_5061695866448667952[96] = 0;
   out_5061695866448667952[97] = 0;
   out_5061695866448667952[98] = 0;
   out_5061695866448667952[99] = 0;
   out_5061695866448667952[100] = 0;
   out_5061695866448667952[101] = 0;
   out_5061695866448667952[102] = 0;
   out_5061695866448667952[103] = 0;
   out_5061695866448667952[104] = 0;
   out_5061695866448667952[105] = 0;
   out_5061695866448667952[106] = 0;
   out_5061695866448667952[107] = 0;
   out_5061695866448667952[108] = -0.5*state[6];
   out_5061695866448667952[109] = 0.5*state[3];
   out_5061695866448667952[110] = 0.5*state[4];
   out_5061695866448667952[111] = 0;
   out_5061695866448667952[112] = 0;
   out_5061695866448667952[113] = 0;
   out_5061695866448667952[114] = 0;
   out_5061695866448667952[115] = 0;
   out_5061695866448667952[116] = 0;
   out_5061695866448667952[117] = 0;
   out_5061695866448667952[118] = 0;
   out_5061695866448667952[119] = 0;
   out_5061695866448667952[120] = 0;
   out_5061695866448667952[121] = 0;
   out_5061695866448667952[122] = 0;
   out_5061695866448667952[123] = 0;
   out_5061695866448667952[124] = 0;
   out_5061695866448667952[125] = 0;
   out_5061695866448667952[126] = 0;
   out_5061695866448667952[127] = 0;
   out_5061695866448667952[128] = 0;
   out_5061695866448667952[129] = 0.5*state[5];
   out_5061695866448667952[130] = -0.5*state[4];
   out_5061695866448667952[131] = 0.5*state[3];
   out_5061695866448667952[132] = 0;
   out_5061695866448667952[133] = 0;
   out_5061695866448667952[134] = 0;
   out_5061695866448667952[135] = 0;
   out_5061695866448667952[136] = 0;
   out_5061695866448667952[137] = 0;
   out_5061695866448667952[138] = 0;
   out_5061695866448667952[139] = 0;
   out_5061695866448667952[140] = 0;
   out_5061695866448667952[141] = 0;
   out_5061695866448667952[142] = 0;
   out_5061695866448667952[143] = 0;
   out_5061695866448667952[144] = 0;
   out_5061695866448667952[145] = 0;
   out_5061695866448667952[146] = 0;
   out_5061695866448667952[147] = 0;
   out_5061695866448667952[148] = 0;
   out_5061695866448667952[149] = 0;
   out_5061695866448667952[150] = 0;
   out_5061695866448667952[151] = 0;
   out_5061695866448667952[152] = 0;
   out_5061695866448667952[153] = 1.0;
   out_5061695866448667952[154] = 0;
   out_5061695866448667952[155] = 0;
   out_5061695866448667952[156] = 0;
   out_5061695866448667952[157] = 0;
   out_5061695866448667952[158] = 0;
   out_5061695866448667952[159] = 0;
   out_5061695866448667952[160] = 0;
   out_5061695866448667952[161] = 0;
   out_5061695866448667952[162] = 0;
   out_5061695866448667952[163] = 0;
   out_5061695866448667952[164] = 0;
   out_5061695866448667952[165] = 0;
   out_5061695866448667952[166] = 0;
   out_5061695866448667952[167] = 0;
   out_5061695866448667952[168] = 0;
   out_5061695866448667952[169] = 0;
   out_5061695866448667952[170] = 0;
   out_5061695866448667952[171] = 0;
   out_5061695866448667952[172] = 0;
   out_5061695866448667952[173] = 0;
   out_5061695866448667952[174] = 0;
   out_5061695866448667952[175] = 1.0;
   out_5061695866448667952[176] = 0;
   out_5061695866448667952[177] = 0;
   out_5061695866448667952[178] = 0;
   out_5061695866448667952[179] = 0;
   out_5061695866448667952[180] = 0;
   out_5061695866448667952[181] = 0;
   out_5061695866448667952[182] = 0;
   out_5061695866448667952[183] = 0;
   out_5061695866448667952[184] = 0;
   out_5061695866448667952[185] = 0;
   out_5061695866448667952[186] = 0;
   out_5061695866448667952[187] = 0;
   out_5061695866448667952[188] = 0;
   out_5061695866448667952[189] = 0;
   out_5061695866448667952[190] = 0;
   out_5061695866448667952[191] = 0;
   out_5061695866448667952[192] = 0;
   out_5061695866448667952[193] = 0;
   out_5061695866448667952[194] = 0;
   out_5061695866448667952[195] = 0;
   out_5061695866448667952[196] = 0;
   out_5061695866448667952[197] = 1.0;
   out_5061695866448667952[198] = 0;
   out_5061695866448667952[199] = 0;
   out_5061695866448667952[200] = 0;
   out_5061695866448667952[201] = 0;
   out_5061695866448667952[202] = 0;
   out_5061695866448667952[203] = 0;
   out_5061695866448667952[204] = 0;
   out_5061695866448667952[205] = 0;
   out_5061695866448667952[206] = 0;
   out_5061695866448667952[207] = 0;
   out_5061695866448667952[208] = 0;
   out_5061695866448667952[209] = 0;
   out_5061695866448667952[210] = 0;
   out_5061695866448667952[211] = 0;
   out_5061695866448667952[212] = 0;
   out_5061695866448667952[213] = 0;
   out_5061695866448667952[214] = 0;
   out_5061695866448667952[215] = 0;
   out_5061695866448667952[216] = 0;
   out_5061695866448667952[217] = 0;
   out_5061695866448667952[218] = 0;
   out_5061695866448667952[219] = 1.0;
   out_5061695866448667952[220] = 0;
   out_5061695866448667952[221] = 0;
   out_5061695866448667952[222] = 0;
   out_5061695866448667952[223] = 0;
   out_5061695866448667952[224] = 0;
   out_5061695866448667952[225] = 0;
   out_5061695866448667952[226] = 0;
   out_5061695866448667952[227] = 0;
   out_5061695866448667952[228] = 0;
   out_5061695866448667952[229] = 0;
   out_5061695866448667952[230] = 0;
   out_5061695866448667952[231] = 0;
   out_5061695866448667952[232] = 0;
   out_5061695866448667952[233] = 0;
   out_5061695866448667952[234] = 0;
   out_5061695866448667952[235] = 0;
   out_5061695866448667952[236] = 0;
   out_5061695866448667952[237] = 0;
   out_5061695866448667952[238] = 0;
   out_5061695866448667952[239] = 0;
   out_5061695866448667952[240] = 0;
   out_5061695866448667952[241] = 1.0;
   out_5061695866448667952[242] = 0;
   out_5061695866448667952[243] = 0;
   out_5061695866448667952[244] = 0;
   out_5061695866448667952[245] = 0;
   out_5061695866448667952[246] = 0;
   out_5061695866448667952[247] = 0;
   out_5061695866448667952[248] = 0;
   out_5061695866448667952[249] = 0;
   out_5061695866448667952[250] = 0;
   out_5061695866448667952[251] = 0;
   out_5061695866448667952[252] = 0;
   out_5061695866448667952[253] = 0;
   out_5061695866448667952[254] = 0;
   out_5061695866448667952[255] = 0;
   out_5061695866448667952[256] = 0;
   out_5061695866448667952[257] = 0;
   out_5061695866448667952[258] = 0;
   out_5061695866448667952[259] = 0;
   out_5061695866448667952[260] = 0;
   out_5061695866448667952[261] = 0;
   out_5061695866448667952[262] = 0;
   out_5061695866448667952[263] = 1.0;
   out_5061695866448667952[264] = 0;
   out_5061695866448667952[265] = 0;
   out_5061695866448667952[266] = 0;
   out_5061695866448667952[267] = 0;
   out_5061695866448667952[268] = 0;
   out_5061695866448667952[269] = 0;
   out_5061695866448667952[270] = 0;
   out_5061695866448667952[271] = 0;
   out_5061695866448667952[272] = 0;
   out_5061695866448667952[273] = 0;
   out_5061695866448667952[274] = 0;
   out_5061695866448667952[275] = 0;
   out_5061695866448667952[276] = 0;
   out_5061695866448667952[277] = 0;
   out_5061695866448667952[278] = 0;
   out_5061695866448667952[279] = 0;
   out_5061695866448667952[280] = 0;
   out_5061695866448667952[281] = 0;
   out_5061695866448667952[282] = 0;
   out_5061695866448667952[283] = 0;
   out_5061695866448667952[284] = 0;
   out_5061695866448667952[285] = 1.0;
   out_5061695866448667952[286] = 0;
   out_5061695866448667952[287] = 0;
   out_5061695866448667952[288] = 0;
   out_5061695866448667952[289] = 0;
   out_5061695866448667952[290] = 0;
   out_5061695866448667952[291] = 0;
   out_5061695866448667952[292] = 0;
   out_5061695866448667952[293] = 0;
   out_5061695866448667952[294] = 0;
   out_5061695866448667952[295] = 0;
   out_5061695866448667952[296] = 0;
   out_5061695866448667952[297] = 0;
   out_5061695866448667952[298] = 0;
   out_5061695866448667952[299] = 0;
   out_5061695866448667952[300] = 0;
   out_5061695866448667952[301] = 0;
   out_5061695866448667952[302] = 0;
   out_5061695866448667952[303] = 0;
   out_5061695866448667952[304] = 0;
   out_5061695866448667952[305] = 0;
   out_5061695866448667952[306] = 0;
   out_5061695866448667952[307] = 1.0;
   out_5061695866448667952[308] = 0;
   out_5061695866448667952[309] = 0;
   out_5061695866448667952[310] = 0;
   out_5061695866448667952[311] = 0;
   out_5061695866448667952[312] = 0;
   out_5061695866448667952[313] = 0;
   out_5061695866448667952[314] = 0;
   out_5061695866448667952[315] = 0;
   out_5061695866448667952[316] = 0;
   out_5061695866448667952[317] = 0;
   out_5061695866448667952[318] = 0;
   out_5061695866448667952[319] = 0;
   out_5061695866448667952[320] = 0;
   out_5061695866448667952[321] = 0;
   out_5061695866448667952[322] = 0;
   out_5061695866448667952[323] = 0;
   out_5061695866448667952[324] = 0;
   out_5061695866448667952[325] = 0;
   out_5061695866448667952[326] = 0;
   out_5061695866448667952[327] = 0;
   out_5061695866448667952[328] = 0;
   out_5061695866448667952[329] = 1.0;
   out_5061695866448667952[330] = 0;
   out_5061695866448667952[331] = 0;
   out_5061695866448667952[332] = 0;
   out_5061695866448667952[333] = 0;
   out_5061695866448667952[334] = 0;
   out_5061695866448667952[335] = 0;
   out_5061695866448667952[336] = 0;
   out_5061695866448667952[337] = 0;
   out_5061695866448667952[338] = 0;
   out_5061695866448667952[339] = 0;
   out_5061695866448667952[340] = 0;
   out_5061695866448667952[341] = 0;
   out_5061695866448667952[342] = 0;
   out_5061695866448667952[343] = 0;
   out_5061695866448667952[344] = 0;
   out_5061695866448667952[345] = 0;
   out_5061695866448667952[346] = 0;
   out_5061695866448667952[347] = 0;
   out_5061695866448667952[348] = 0;
   out_5061695866448667952[349] = 0;
   out_5061695866448667952[350] = 0;
   out_5061695866448667952[351] = 1.0;
   out_5061695866448667952[352] = 0;
   out_5061695866448667952[353] = 0;
   out_5061695866448667952[354] = 0;
   out_5061695866448667952[355] = 0;
   out_5061695866448667952[356] = 0;
   out_5061695866448667952[357] = 0;
   out_5061695866448667952[358] = 0;
   out_5061695866448667952[359] = 0;
   out_5061695866448667952[360] = 0;
   out_5061695866448667952[361] = 0;
   out_5061695866448667952[362] = 0;
   out_5061695866448667952[363] = 0;
   out_5061695866448667952[364] = 0;
   out_5061695866448667952[365] = 0;
   out_5061695866448667952[366] = 0;
   out_5061695866448667952[367] = 0;
   out_5061695866448667952[368] = 0;
   out_5061695866448667952[369] = 0;
   out_5061695866448667952[370] = 0;
   out_5061695866448667952[371] = 0;
   out_5061695866448667952[372] = 0;
   out_5061695866448667952[373] = 1.0;
   out_5061695866448667952[374] = 0;
   out_5061695866448667952[375] = 0;
   out_5061695866448667952[376] = 0;
   out_5061695866448667952[377] = 0;
   out_5061695866448667952[378] = 0;
   out_5061695866448667952[379] = 0;
   out_5061695866448667952[380] = 0;
   out_5061695866448667952[381] = 0;
   out_5061695866448667952[382] = 0;
   out_5061695866448667952[383] = 0;
   out_5061695866448667952[384] = 0;
   out_5061695866448667952[385] = 0;
   out_5061695866448667952[386] = 0;
   out_5061695866448667952[387] = 0;
   out_5061695866448667952[388] = 0;
   out_5061695866448667952[389] = 0;
   out_5061695866448667952[390] = 0;
   out_5061695866448667952[391] = 0;
   out_5061695866448667952[392] = 0;
   out_5061695866448667952[393] = 0;
   out_5061695866448667952[394] = 0;
   out_5061695866448667952[395] = 1.0;
   out_5061695866448667952[396] = 0;
   out_5061695866448667952[397] = 0;
   out_5061695866448667952[398] = 0;
   out_5061695866448667952[399] = 0;
   out_5061695866448667952[400] = 0;
   out_5061695866448667952[401] = 0;
   out_5061695866448667952[402] = 0;
   out_5061695866448667952[403] = 0;
   out_5061695866448667952[404] = 0;
   out_5061695866448667952[405] = 0;
   out_5061695866448667952[406] = 0;
   out_5061695866448667952[407] = 0;
   out_5061695866448667952[408] = 0;
   out_5061695866448667952[409] = 0;
   out_5061695866448667952[410] = 0;
   out_5061695866448667952[411] = 0;
   out_5061695866448667952[412] = 0;
   out_5061695866448667952[413] = 0;
   out_5061695866448667952[414] = 0;
   out_5061695866448667952[415] = 0;
   out_5061695866448667952[416] = 0;
   out_5061695866448667952[417] = 1.0;
   out_5061695866448667952[418] = 0;
   out_5061695866448667952[419] = 0;
   out_5061695866448667952[420] = 0;
   out_5061695866448667952[421] = 0;
   out_5061695866448667952[422] = 0;
   out_5061695866448667952[423] = 0;
   out_5061695866448667952[424] = 0;
   out_5061695866448667952[425] = 0;
   out_5061695866448667952[426] = 0;
   out_5061695866448667952[427] = 0;
   out_5061695866448667952[428] = 0;
   out_5061695866448667952[429] = 0;
   out_5061695866448667952[430] = 0;
   out_5061695866448667952[431] = 0;
   out_5061695866448667952[432] = 0;
   out_5061695866448667952[433] = 0;
   out_5061695866448667952[434] = 0;
   out_5061695866448667952[435] = 0;
   out_5061695866448667952[436] = 0;
   out_5061695866448667952[437] = 0;
   out_5061695866448667952[438] = 0;
   out_5061695866448667952[439] = 1.0;
   out_5061695866448667952[440] = 0;
   out_5061695866448667952[441] = 0;
   out_5061695866448667952[442] = 0;
   out_5061695866448667952[443] = 0;
   out_5061695866448667952[444] = 0;
   out_5061695866448667952[445] = 0;
   out_5061695866448667952[446] = 0;
   out_5061695866448667952[447] = 0;
   out_5061695866448667952[448] = 0;
   out_5061695866448667952[449] = 0;
   out_5061695866448667952[450] = 0;
   out_5061695866448667952[451] = 0;
   out_5061695866448667952[452] = 0;
   out_5061695866448667952[453] = 0;
   out_5061695866448667952[454] = 0;
   out_5061695866448667952[455] = 0;
   out_5061695866448667952[456] = 0;
   out_5061695866448667952[457] = 0;
   out_5061695866448667952[458] = 0;
   out_5061695866448667952[459] = 0;
   out_5061695866448667952[460] = 0;
   out_5061695866448667952[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1513825950941167469) {
   out_1513825950941167469[0] = dt*state[7] + state[0];
   out_1513825950941167469[1] = dt*state[8] + state[1];
   out_1513825950941167469[2] = dt*state[9] + state[2];
   out_1513825950941167469[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1513825950941167469[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1513825950941167469[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1513825950941167469[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1513825950941167469[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1513825950941167469[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1513825950941167469[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1513825950941167469[10] = state[10];
   out_1513825950941167469[11] = state[11];
   out_1513825950941167469[12] = state[12];
   out_1513825950941167469[13] = state[13];
   out_1513825950941167469[14] = state[14];
   out_1513825950941167469[15] = state[15];
   out_1513825950941167469[16] = state[16];
   out_1513825950941167469[17] = state[17];
   out_1513825950941167469[18] = state[18];
   out_1513825950941167469[19] = state[19];
   out_1513825950941167469[20] = state[20];
   out_1513825950941167469[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3551463619284444433) {
   out_3551463619284444433[0] = 1;
   out_3551463619284444433[1] = 0;
   out_3551463619284444433[2] = 0;
   out_3551463619284444433[3] = 0;
   out_3551463619284444433[4] = 0;
   out_3551463619284444433[5] = 0;
   out_3551463619284444433[6] = dt;
   out_3551463619284444433[7] = 0;
   out_3551463619284444433[8] = 0;
   out_3551463619284444433[9] = 0;
   out_3551463619284444433[10] = 0;
   out_3551463619284444433[11] = 0;
   out_3551463619284444433[12] = 0;
   out_3551463619284444433[13] = 0;
   out_3551463619284444433[14] = 0;
   out_3551463619284444433[15] = 0;
   out_3551463619284444433[16] = 0;
   out_3551463619284444433[17] = 0;
   out_3551463619284444433[18] = 0;
   out_3551463619284444433[19] = 0;
   out_3551463619284444433[20] = 0;
   out_3551463619284444433[21] = 0;
   out_3551463619284444433[22] = 1;
   out_3551463619284444433[23] = 0;
   out_3551463619284444433[24] = 0;
   out_3551463619284444433[25] = 0;
   out_3551463619284444433[26] = 0;
   out_3551463619284444433[27] = 0;
   out_3551463619284444433[28] = dt;
   out_3551463619284444433[29] = 0;
   out_3551463619284444433[30] = 0;
   out_3551463619284444433[31] = 0;
   out_3551463619284444433[32] = 0;
   out_3551463619284444433[33] = 0;
   out_3551463619284444433[34] = 0;
   out_3551463619284444433[35] = 0;
   out_3551463619284444433[36] = 0;
   out_3551463619284444433[37] = 0;
   out_3551463619284444433[38] = 0;
   out_3551463619284444433[39] = 0;
   out_3551463619284444433[40] = 0;
   out_3551463619284444433[41] = 0;
   out_3551463619284444433[42] = 0;
   out_3551463619284444433[43] = 0;
   out_3551463619284444433[44] = 1;
   out_3551463619284444433[45] = 0;
   out_3551463619284444433[46] = 0;
   out_3551463619284444433[47] = 0;
   out_3551463619284444433[48] = 0;
   out_3551463619284444433[49] = 0;
   out_3551463619284444433[50] = dt;
   out_3551463619284444433[51] = 0;
   out_3551463619284444433[52] = 0;
   out_3551463619284444433[53] = 0;
   out_3551463619284444433[54] = 0;
   out_3551463619284444433[55] = 0;
   out_3551463619284444433[56] = 0;
   out_3551463619284444433[57] = 0;
   out_3551463619284444433[58] = 0;
   out_3551463619284444433[59] = 0;
   out_3551463619284444433[60] = 0;
   out_3551463619284444433[61] = 0;
   out_3551463619284444433[62] = 0;
   out_3551463619284444433[63] = 0;
   out_3551463619284444433[64] = 0;
   out_3551463619284444433[65] = 0;
   out_3551463619284444433[66] = 1;
   out_3551463619284444433[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3551463619284444433[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3551463619284444433[69] = 0;
   out_3551463619284444433[70] = 0;
   out_3551463619284444433[71] = 0;
   out_3551463619284444433[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3551463619284444433[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3551463619284444433[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3551463619284444433[75] = 0;
   out_3551463619284444433[76] = 0;
   out_3551463619284444433[77] = 0;
   out_3551463619284444433[78] = 0;
   out_3551463619284444433[79] = 0;
   out_3551463619284444433[80] = 0;
   out_3551463619284444433[81] = 0;
   out_3551463619284444433[82] = 0;
   out_3551463619284444433[83] = 0;
   out_3551463619284444433[84] = 0;
   out_3551463619284444433[85] = 0;
   out_3551463619284444433[86] = 0;
   out_3551463619284444433[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3551463619284444433[88] = 1;
   out_3551463619284444433[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3551463619284444433[90] = 0;
   out_3551463619284444433[91] = 0;
   out_3551463619284444433[92] = 0;
   out_3551463619284444433[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3551463619284444433[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3551463619284444433[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3551463619284444433[96] = 0;
   out_3551463619284444433[97] = 0;
   out_3551463619284444433[98] = 0;
   out_3551463619284444433[99] = 0;
   out_3551463619284444433[100] = 0;
   out_3551463619284444433[101] = 0;
   out_3551463619284444433[102] = 0;
   out_3551463619284444433[103] = 0;
   out_3551463619284444433[104] = 0;
   out_3551463619284444433[105] = 0;
   out_3551463619284444433[106] = 0;
   out_3551463619284444433[107] = 0;
   out_3551463619284444433[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3551463619284444433[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3551463619284444433[110] = 1;
   out_3551463619284444433[111] = 0;
   out_3551463619284444433[112] = 0;
   out_3551463619284444433[113] = 0;
   out_3551463619284444433[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3551463619284444433[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3551463619284444433[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3551463619284444433[117] = 0;
   out_3551463619284444433[118] = 0;
   out_3551463619284444433[119] = 0;
   out_3551463619284444433[120] = 0;
   out_3551463619284444433[121] = 0;
   out_3551463619284444433[122] = 0;
   out_3551463619284444433[123] = 0;
   out_3551463619284444433[124] = 0;
   out_3551463619284444433[125] = 0;
   out_3551463619284444433[126] = 0;
   out_3551463619284444433[127] = 0;
   out_3551463619284444433[128] = 0;
   out_3551463619284444433[129] = 0;
   out_3551463619284444433[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3551463619284444433[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3551463619284444433[132] = 1;
   out_3551463619284444433[133] = 0;
   out_3551463619284444433[134] = 0;
   out_3551463619284444433[135] = 0;
   out_3551463619284444433[136] = 0;
   out_3551463619284444433[137] = 0;
   out_3551463619284444433[138] = 0;
   out_3551463619284444433[139] = 0;
   out_3551463619284444433[140] = 0;
   out_3551463619284444433[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3551463619284444433[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3551463619284444433[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3551463619284444433[144] = 0;
   out_3551463619284444433[145] = 0;
   out_3551463619284444433[146] = 0;
   out_3551463619284444433[147] = 0;
   out_3551463619284444433[148] = 0;
   out_3551463619284444433[149] = 0;
   out_3551463619284444433[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3551463619284444433[151] = 0;
   out_3551463619284444433[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3551463619284444433[153] = 0;
   out_3551463619284444433[154] = 1;
   out_3551463619284444433[155] = 0;
   out_3551463619284444433[156] = 0;
   out_3551463619284444433[157] = 0;
   out_3551463619284444433[158] = 0;
   out_3551463619284444433[159] = 0;
   out_3551463619284444433[160] = 0;
   out_3551463619284444433[161] = 0;
   out_3551463619284444433[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3551463619284444433[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3551463619284444433[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3551463619284444433[165] = 0;
   out_3551463619284444433[166] = 0;
   out_3551463619284444433[167] = 0;
   out_3551463619284444433[168] = 0;
   out_3551463619284444433[169] = 0;
   out_3551463619284444433[170] = 0;
   out_3551463619284444433[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3551463619284444433[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3551463619284444433[173] = 0;
   out_3551463619284444433[174] = 0;
   out_3551463619284444433[175] = 0;
   out_3551463619284444433[176] = 1;
   out_3551463619284444433[177] = 0;
   out_3551463619284444433[178] = 0;
   out_3551463619284444433[179] = 0;
   out_3551463619284444433[180] = 0;
   out_3551463619284444433[181] = 0;
   out_3551463619284444433[182] = 0;
   out_3551463619284444433[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3551463619284444433[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3551463619284444433[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3551463619284444433[186] = 0;
   out_3551463619284444433[187] = 0;
   out_3551463619284444433[188] = 0;
   out_3551463619284444433[189] = 0;
   out_3551463619284444433[190] = 0;
   out_3551463619284444433[191] = 0;
   out_3551463619284444433[192] = 0;
   out_3551463619284444433[193] = 0;
   out_3551463619284444433[194] = 0;
   out_3551463619284444433[195] = 0;
   out_3551463619284444433[196] = 0;
   out_3551463619284444433[197] = 0;
   out_3551463619284444433[198] = 1;
   out_3551463619284444433[199] = 0;
   out_3551463619284444433[200] = 0;
   out_3551463619284444433[201] = 0;
   out_3551463619284444433[202] = 0;
   out_3551463619284444433[203] = 0;
   out_3551463619284444433[204] = 0;
   out_3551463619284444433[205] = 0;
   out_3551463619284444433[206] = 0;
   out_3551463619284444433[207] = 0;
   out_3551463619284444433[208] = 0;
   out_3551463619284444433[209] = 0;
   out_3551463619284444433[210] = 0;
   out_3551463619284444433[211] = 0;
   out_3551463619284444433[212] = 0;
   out_3551463619284444433[213] = 0;
   out_3551463619284444433[214] = 0;
   out_3551463619284444433[215] = 0;
   out_3551463619284444433[216] = 0;
   out_3551463619284444433[217] = 0;
   out_3551463619284444433[218] = 0;
   out_3551463619284444433[219] = 0;
   out_3551463619284444433[220] = 1;
   out_3551463619284444433[221] = 0;
   out_3551463619284444433[222] = 0;
   out_3551463619284444433[223] = 0;
   out_3551463619284444433[224] = 0;
   out_3551463619284444433[225] = 0;
   out_3551463619284444433[226] = 0;
   out_3551463619284444433[227] = 0;
   out_3551463619284444433[228] = 0;
   out_3551463619284444433[229] = 0;
   out_3551463619284444433[230] = 0;
   out_3551463619284444433[231] = 0;
   out_3551463619284444433[232] = 0;
   out_3551463619284444433[233] = 0;
   out_3551463619284444433[234] = 0;
   out_3551463619284444433[235] = 0;
   out_3551463619284444433[236] = 0;
   out_3551463619284444433[237] = 0;
   out_3551463619284444433[238] = 0;
   out_3551463619284444433[239] = 0;
   out_3551463619284444433[240] = 0;
   out_3551463619284444433[241] = 0;
   out_3551463619284444433[242] = 1;
   out_3551463619284444433[243] = 0;
   out_3551463619284444433[244] = 0;
   out_3551463619284444433[245] = 0;
   out_3551463619284444433[246] = 0;
   out_3551463619284444433[247] = 0;
   out_3551463619284444433[248] = 0;
   out_3551463619284444433[249] = 0;
   out_3551463619284444433[250] = 0;
   out_3551463619284444433[251] = 0;
   out_3551463619284444433[252] = 0;
   out_3551463619284444433[253] = 0;
   out_3551463619284444433[254] = 0;
   out_3551463619284444433[255] = 0;
   out_3551463619284444433[256] = 0;
   out_3551463619284444433[257] = 0;
   out_3551463619284444433[258] = 0;
   out_3551463619284444433[259] = 0;
   out_3551463619284444433[260] = 0;
   out_3551463619284444433[261] = 0;
   out_3551463619284444433[262] = 0;
   out_3551463619284444433[263] = 0;
   out_3551463619284444433[264] = 1;
   out_3551463619284444433[265] = 0;
   out_3551463619284444433[266] = 0;
   out_3551463619284444433[267] = 0;
   out_3551463619284444433[268] = 0;
   out_3551463619284444433[269] = 0;
   out_3551463619284444433[270] = 0;
   out_3551463619284444433[271] = 0;
   out_3551463619284444433[272] = 0;
   out_3551463619284444433[273] = 0;
   out_3551463619284444433[274] = 0;
   out_3551463619284444433[275] = 0;
   out_3551463619284444433[276] = 0;
   out_3551463619284444433[277] = 0;
   out_3551463619284444433[278] = 0;
   out_3551463619284444433[279] = 0;
   out_3551463619284444433[280] = 0;
   out_3551463619284444433[281] = 0;
   out_3551463619284444433[282] = 0;
   out_3551463619284444433[283] = 0;
   out_3551463619284444433[284] = 0;
   out_3551463619284444433[285] = 0;
   out_3551463619284444433[286] = 1;
   out_3551463619284444433[287] = 0;
   out_3551463619284444433[288] = 0;
   out_3551463619284444433[289] = 0;
   out_3551463619284444433[290] = 0;
   out_3551463619284444433[291] = 0;
   out_3551463619284444433[292] = 0;
   out_3551463619284444433[293] = 0;
   out_3551463619284444433[294] = 0;
   out_3551463619284444433[295] = 0;
   out_3551463619284444433[296] = 0;
   out_3551463619284444433[297] = 0;
   out_3551463619284444433[298] = 0;
   out_3551463619284444433[299] = 0;
   out_3551463619284444433[300] = 0;
   out_3551463619284444433[301] = 0;
   out_3551463619284444433[302] = 0;
   out_3551463619284444433[303] = 0;
   out_3551463619284444433[304] = 0;
   out_3551463619284444433[305] = 0;
   out_3551463619284444433[306] = 0;
   out_3551463619284444433[307] = 0;
   out_3551463619284444433[308] = 1;
   out_3551463619284444433[309] = 0;
   out_3551463619284444433[310] = 0;
   out_3551463619284444433[311] = 0;
   out_3551463619284444433[312] = 0;
   out_3551463619284444433[313] = 0;
   out_3551463619284444433[314] = 0;
   out_3551463619284444433[315] = 0;
   out_3551463619284444433[316] = 0;
   out_3551463619284444433[317] = 0;
   out_3551463619284444433[318] = 0;
   out_3551463619284444433[319] = 0;
   out_3551463619284444433[320] = 0;
   out_3551463619284444433[321] = 0;
   out_3551463619284444433[322] = 0;
   out_3551463619284444433[323] = 0;
   out_3551463619284444433[324] = 0;
   out_3551463619284444433[325] = 0;
   out_3551463619284444433[326] = 0;
   out_3551463619284444433[327] = 0;
   out_3551463619284444433[328] = 0;
   out_3551463619284444433[329] = 0;
   out_3551463619284444433[330] = 1;
   out_3551463619284444433[331] = 0;
   out_3551463619284444433[332] = 0;
   out_3551463619284444433[333] = 0;
   out_3551463619284444433[334] = 0;
   out_3551463619284444433[335] = 0;
   out_3551463619284444433[336] = 0;
   out_3551463619284444433[337] = 0;
   out_3551463619284444433[338] = 0;
   out_3551463619284444433[339] = 0;
   out_3551463619284444433[340] = 0;
   out_3551463619284444433[341] = 0;
   out_3551463619284444433[342] = 0;
   out_3551463619284444433[343] = 0;
   out_3551463619284444433[344] = 0;
   out_3551463619284444433[345] = 0;
   out_3551463619284444433[346] = 0;
   out_3551463619284444433[347] = 0;
   out_3551463619284444433[348] = 0;
   out_3551463619284444433[349] = 0;
   out_3551463619284444433[350] = 0;
   out_3551463619284444433[351] = 0;
   out_3551463619284444433[352] = 1;
   out_3551463619284444433[353] = 0;
   out_3551463619284444433[354] = 0;
   out_3551463619284444433[355] = 0;
   out_3551463619284444433[356] = 0;
   out_3551463619284444433[357] = 0;
   out_3551463619284444433[358] = 0;
   out_3551463619284444433[359] = 0;
   out_3551463619284444433[360] = 0;
   out_3551463619284444433[361] = 0;
   out_3551463619284444433[362] = 0;
   out_3551463619284444433[363] = 0;
   out_3551463619284444433[364] = 0;
   out_3551463619284444433[365] = 0;
   out_3551463619284444433[366] = 0;
   out_3551463619284444433[367] = 0;
   out_3551463619284444433[368] = 0;
   out_3551463619284444433[369] = 0;
   out_3551463619284444433[370] = 0;
   out_3551463619284444433[371] = 0;
   out_3551463619284444433[372] = 0;
   out_3551463619284444433[373] = 0;
   out_3551463619284444433[374] = 1;
   out_3551463619284444433[375] = 0;
   out_3551463619284444433[376] = 0;
   out_3551463619284444433[377] = 0;
   out_3551463619284444433[378] = 0;
   out_3551463619284444433[379] = 0;
   out_3551463619284444433[380] = 0;
   out_3551463619284444433[381] = 0;
   out_3551463619284444433[382] = 0;
   out_3551463619284444433[383] = 0;
   out_3551463619284444433[384] = 0;
   out_3551463619284444433[385] = 0;
   out_3551463619284444433[386] = 0;
   out_3551463619284444433[387] = 0;
   out_3551463619284444433[388] = 0;
   out_3551463619284444433[389] = 0;
   out_3551463619284444433[390] = 0;
   out_3551463619284444433[391] = 0;
   out_3551463619284444433[392] = 0;
   out_3551463619284444433[393] = 0;
   out_3551463619284444433[394] = 0;
   out_3551463619284444433[395] = 0;
   out_3551463619284444433[396] = 1;
   out_3551463619284444433[397] = 0;
   out_3551463619284444433[398] = 0;
   out_3551463619284444433[399] = 0;
   out_3551463619284444433[400] = 0;
   out_3551463619284444433[401] = 0;
   out_3551463619284444433[402] = 0;
   out_3551463619284444433[403] = 0;
   out_3551463619284444433[404] = 0;
   out_3551463619284444433[405] = 0;
   out_3551463619284444433[406] = 0;
   out_3551463619284444433[407] = 0;
   out_3551463619284444433[408] = 0;
   out_3551463619284444433[409] = 0;
   out_3551463619284444433[410] = 0;
   out_3551463619284444433[411] = 0;
   out_3551463619284444433[412] = 0;
   out_3551463619284444433[413] = 0;
   out_3551463619284444433[414] = 0;
   out_3551463619284444433[415] = 0;
   out_3551463619284444433[416] = 0;
   out_3551463619284444433[417] = 0;
   out_3551463619284444433[418] = 1;
   out_3551463619284444433[419] = 0;
   out_3551463619284444433[420] = 0;
   out_3551463619284444433[421] = 0;
   out_3551463619284444433[422] = 0;
   out_3551463619284444433[423] = 0;
   out_3551463619284444433[424] = 0;
   out_3551463619284444433[425] = 0;
   out_3551463619284444433[426] = 0;
   out_3551463619284444433[427] = 0;
   out_3551463619284444433[428] = 0;
   out_3551463619284444433[429] = 0;
   out_3551463619284444433[430] = 0;
   out_3551463619284444433[431] = 0;
   out_3551463619284444433[432] = 0;
   out_3551463619284444433[433] = 0;
   out_3551463619284444433[434] = 0;
   out_3551463619284444433[435] = 0;
   out_3551463619284444433[436] = 0;
   out_3551463619284444433[437] = 0;
   out_3551463619284444433[438] = 0;
   out_3551463619284444433[439] = 0;
   out_3551463619284444433[440] = 1;
}
void h_4(double *state, double *unused, double *out_7554895586088319024) {
   out_7554895586088319024[0] = state[10] + state[13];
   out_7554895586088319024[1] = state[11] + state[14];
   out_7554895586088319024[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4984321431002188720) {
   out_4984321431002188720[0] = 0;
   out_4984321431002188720[1] = 0;
   out_4984321431002188720[2] = 0;
   out_4984321431002188720[3] = 0;
   out_4984321431002188720[4] = 0;
   out_4984321431002188720[5] = 0;
   out_4984321431002188720[6] = 0;
   out_4984321431002188720[7] = 0;
   out_4984321431002188720[8] = 0;
   out_4984321431002188720[9] = 0;
   out_4984321431002188720[10] = 1;
   out_4984321431002188720[11] = 0;
   out_4984321431002188720[12] = 0;
   out_4984321431002188720[13] = 1;
   out_4984321431002188720[14] = 0;
   out_4984321431002188720[15] = 0;
   out_4984321431002188720[16] = 0;
   out_4984321431002188720[17] = 0;
   out_4984321431002188720[18] = 0;
   out_4984321431002188720[19] = 0;
   out_4984321431002188720[20] = 0;
   out_4984321431002188720[21] = 0;
   out_4984321431002188720[22] = 0;
   out_4984321431002188720[23] = 0;
   out_4984321431002188720[24] = 0;
   out_4984321431002188720[25] = 0;
   out_4984321431002188720[26] = 0;
   out_4984321431002188720[27] = 0;
   out_4984321431002188720[28] = 0;
   out_4984321431002188720[29] = 0;
   out_4984321431002188720[30] = 0;
   out_4984321431002188720[31] = 0;
   out_4984321431002188720[32] = 0;
   out_4984321431002188720[33] = 1;
   out_4984321431002188720[34] = 0;
   out_4984321431002188720[35] = 0;
   out_4984321431002188720[36] = 1;
   out_4984321431002188720[37] = 0;
   out_4984321431002188720[38] = 0;
   out_4984321431002188720[39] = 0;
   out_4984321431002188720[40] = 0;
   out_4984321431002188720[41] = 0;
   out_4984321431002188720[42] = 0;
   out_4984321431002188720[43] = 0;
   out_4984321431002188720[44] = 0;
   out_4984321431002188720[45] = 0;
   out_4984321431002188720[46] = 0;
   out_4984321431002188720[47] = 0;
   out_4984321431002188720[48] = 0;
   out_4984321431002188720[49] = 0;
   out_4984321431002188720[50] = 0;
   out_4984321431002188720[51] = 0;
   out_4984321431002188720[52] = 0;
   out_4984321431002188720[53] = 0;
   out_4984321431002188720[54] = 0;
   out_4984321431002188720[55] = 0;
   out_4984321431002188720[56] = 1;
   out_4984321431002188720[57] = 0;
   out_4984321431002188720[58] = 0;
   out_4984321431002188720[59] = 1;
   out_4984321431002188720[60] = 0;
   out_4984321431002188720[61] = 0;
   out_4984321431002188720[62] = 0;
   out_4984321431002188720[63] = 0;
   out_4984321431002188720[64] = 0;
   out_4984321431002188720[65] = 0;
}
void h_9(double *state, double *unused, double *out_317907328216681576) {
   out_317907328216681576[0] = state[10];
   out_317907328216681576[1] = state[11];
   out_317907328216681576[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4743131784372598075) {
   out_4743131784372598075[0] = 0;
   out_4743131784372598075[1] = 0;
   out_4743131784372598075[2] = 0;
   out_4743131784372598075[3] = 0;
   out_4743131784372598075[4] = 0;
   out_4743131784372598075[5] = 0;
   out_4743131784372598075[6] = 0;
   out_4743131784372598075[7] = 0;
   out_4743131784372598075[8] = 0;
   out_4743131784372598075[9] = 0;
   out_4743131784372598075[10] = 1;
   out_4743131784372598075[11] = 0;
   out_4743131784372598075[12] = 0;
   out_4743131784372598075[13] = 0;
   out_4743131784372598075[14] = 0;
   out_4743131784372598075[15] = 0;
   out_4743131784372598075[16] = 0;
   out_4743131784372598075[17] = 0;
   out_4743131784372598075[18] = 0;
   out_4743131784372598075[19] = 0;
   out_4743131784372598075[20] = 0;
   out_4743131784372598075[21] = 0;
   out_4743131784372598075[22] = 0;
   out_4743131784372598075[23] = 0;
   out_4743131784372598075[24] = 0;
   out_4743131784372598075[25] = 0;
   out_4743131784372598075[26] = 0;
   out_4743131784372598075[27] = 0;
   out_4743131784372598075[28] = 0;
   out_4743131784372598075[29] = 0;
   out_4743131784372598075[30] = 0;
   out_4743131784372598075[31] = 0;
   out_4743131784372598075[32] = 0;
   out_4743131784372598075[33] = 1;
   out_4743131784372598075[34] = 0;
   out_4743131784372598075[35] = 0;
   out_4743131784372598075[36] = 0;
   out_4743131784372598075[37] = 0;
   out_4743131784372598075[38] = 0;
   out_4743131784372598075[39] = 0;
   out_4743131784372598075[40] = 0;
   out_4743131784372598075[41] = 0;
   out_4743131784372598075[42] = 0;
   out_4743131784372598075[43] = 0;
   out_4743131784372598075[44] = 0;
   out_4743131784372598075[45] = 0;
   out_4743131784372598075[46] = 0;
   out_4743131784372598075[47] = 0;
   out_4743131784372598075[48] = 0;
   out_4743131784372598075[49] = 0;
   out_4743131784372598075[50] = 0;
   out_4743131784372598075[51] = 0;
   out_4743131784372598075[52] = 0;
   out_4743131784372598075[53] = 0;
   out_4743131784372598075[54] = 0;
   out_4743131784372598075[55] = 0;
   out_4743131784372598075[56] = 1;
   out_4743131784372598075[57] = 0;
   out_4743131784372598075[58] = 0;
   out_4743131784372598075[59] = 0;
   out_4743131784372598075[60] = 0;
   out_4743131784372598075[61] = 0;
   out_4743131784372598075[62] = 0;
   out_4743131784372598075[63] = 0;
   out_4743131784372598075[64] = 0;
   out_4743131784372598075[65] = 0;
}
void h_10(double *state, double *unused, double *out_5652489443217293721) {
   out_5652489443217293721[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5652489443217293721[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5652489443217293721[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3153913664865385503) {
   out_3153913664865385503[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3153913664865385503[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3153913664865385503[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3153913664865385503[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3153913664865385503[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3153913664865385503[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3153913664865385503[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3153913664865385503[7] = 0;
   out_3153913664865385503[8] = 0;
   out_3153913664865385503[9] = 0;
   out_3153913664865385503[10] = 0;
   out_3153913664865385503[11] = 0;
   out_3153913664865385503[12] = 0;
   out_3153913664865385503[13] = 0;
   out_3153913664865385503[14] = 0;
   out_3153913664865385503[15] = 0;
   out_3153913664865385503[16] = 1;
   out_3153913664865385503[17] = 0;
   out_3153913664865385503[18] = 0;
   out_3153913664865385503[19] = 1;
   out_3153913664865385503[20] = 0;
   out_3153913664865385503[21] = 0;
   out_3153913664865385503[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3153913664865385503[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3153913664865385503[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3153913664865385503[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3153913664865385503[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3153913664865385503[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3153913664865385503[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3153913664865385503[29] = 0;
   out_3153913664865385503[30] = 0;
   out_3153913664865385503[31] = 0;
   out_3153913664865385503[32] = 0;
   out_3153913664865385503[33] = 0;
   out_3153913664865385503[34] = 0;
   out_3153913664865385503[35] = 0;
   out_3153913664865385503[36] = 0;
   out_3153913664865385503[37] = 0;
   out_3153913664865385503[38] = 0;
   out_3153913664865385503[39] = 1;
   out_3153913664865385503[40] = 0;
   out_3153913664865385503[41] = 0;
   out_3153913664865385503[42] = 1;
   out_3153913664865385503[43] = 0;
   out_3153913664865385503[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3153913664865385503[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3153913664865385503[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3153913664865385503[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3153913664865385503[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3153913664865385503[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3153913664865385503[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3153913664865385503[51] = 0;
   out_3153913664865385503[52] = 0;
   out_3153913664865385503[53] = 0;
   out_3153913664865385503[54] = 0;
   out_3153913664865385503[55] = 0;
   out_3153913664865385503[56] = 0;
   out_3153913664865385503[57] = 0;
   out_3153913664865385503[58] = 0;
   out_3153913664865385503[59] = 0;
   out_3153913664865385503[60] = 0;
   out_3153913664865385503[61] = 0;
   out_3153913664865385503[62] = 1;
   out_3153913664865385503[63] = 0;
   out_3153913664865385503[64] = 0;
   out_3153913664865385503[65] = 1;
}
void h_12(double *state, double *unused, double *out_1650444621024254768) {
   out_1650444621024254768[0] = state[0];
   out_1650444621024254768[1] = state[1];
   out_1650444621024254768[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4363222405954595053) {
   out_4363222405954595053[0] = 1;
   out_4363222405954595053[1] = 0;
   out_4363222405954595053[2] = 0;
   out_4363222405954595053[3] = 0;
   out_4363222405954595053[4] = 0;
   out_4363222405954595053[5] = 0;
   out_4363222405954595053[6] = 0;
   out_4363222405954595053[7] = 0;
   out_4363222405954595053[8] = 0;
   out_4363222405954595053[9] = 0;
   out_4363222405954595053[10] = 0;
   out_4363222405954595053[11] = 0;
   out_4363222405954595053[12] = 0;
   out_4363222405954595053[13] = 0;
   out_4363222405954595053[14] = 0;
   out_4363222405954595053[15] = 0;
   out_4363222405954595053[16] = 0;
   out_4363222405954595053[17] = 0;
   out_4363222405954595053[18] = 0;
   out_4363222405954595053[19] = 0;
   out_4363222405954595053[20] = 0;
   out_4363222405954595053[21] = 0;
   out_4363222405954595053[22] = 0;
   out_4363222405954595053[23] = 1;
   out_4363222405954595053[24] = 0;
   out_4363222405954595053[25] = 0;
   out_4363222405954595053[26] = 0;
   out_4363222405954595053[27] = 0;
   out_4363222405954595053[28] = 0;
   out_4363222405954595053[29] = 0;
   out_4363222405954595053[30] = 0;
   out_4363222405954595053[31] = 0;
   out_4363222405954595053[32] = 0;
   out_4363222405954595053[33] = 0;
   out_4363222405954595053[34] = 0;
   out_4363222405954595053[35] = 0;
   out_4363222405954595053[36] = 0;
   out_4363222405954595053[37] = 0;
   out_4363222405954595053[38] = 0;
   out_4363222405954595053[39] = 0;
   out_4363222405954595053[40] = 0;
   out_4363222405954595053[41] = 0;
   out_4363222405954595053[42] = 0;
   out_4363222405954595053[43] = 0;
   out_4363222405954595053[44] = 0;
   out_4363222405954595053[45] = 0;
   out_4363222405954595053[46] = 1;
   out_4363222405954595053[47] = 0;
   out_4363222405954595053[48] = 0;
   out_4363222405954595053[49] = 0;
   out_4363222405954595053[50] = 0;
   out_4363222405954595053[51] = 0;
   out_4363222405954595053[52] = 0;
   out_4363222405954595053[53] = 0;
   out_4363222405954595053[54] = 0;
   out_4363222405954595053[55] = 0;
   out_4363222405954595053[56] = 0;
   out_4363222405954595053[57] = 0;
   out_4363222405954595053[58] = 0;
   out_4363222405954595053[59] = 0;
   out_4363222405954595053[60] = 0;
   out_4363222405954595053[61] = 0;
   out_4363222405954595053[62] = 0;
   out_4363222405954595053[63] = 0;
   out_4363222405954595053[64] = 0;
   out_4363222405954595053[65] = 0;
}
void h_35(double *state, double *unused, double *out_4652214696272546815) {
   out_4652214696272546815[0] = state[7];
   out_4652214696272546815[1] = state[8];
   out_4652214696272546815[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1617659373629581344) {
   out_1617659373629581344[0] = 0;
   out_1617659373629581344[1] = 0;
   out_1617659373629581344[2] = 0;
   out_1617659373629581344[3] = 0;
   out_1617659373629581344[4] = 0;
   out_1617659373629581344[5] = 0;
   out_1617659373629581344[6] = 0;
   out_1617659373629581344[7] = 1;
   out_1617659373629581344[8] = 0;
   out_1617659373629581344[9] = 0;
   out_1617659373629581344[10] = 0;
   out_1617659373629581344[11] = 0;
   out_1617659373629581344[12] = 0;
   out_1617659373629581344[13] = 0;
   out_1617659373629581344[14] = 0;
   out_1617659373629581344[15] = 0;
   out_1617659373629581344[16] = 0;
   out_1617659373629581344[17] = 0;
   out_1617659373629581344[18] = 0;
   out_1617659373629581344[19] = 0;
   out_1617659373629581344[20] = 0;
   out_1617659373629581344[21] = 0;
   out_1617659373629581344[22] = 0;
   out_1617659373629581344[23] = 0;
   out_1617659373629581344[24] = 0;
   out_1617659373629581344[25] = 0;
   out_1617659373629581344[26] = 0;
   out_1617659373629581344[27] = 0;
   out_1617659373629581344[28] = 0;
   out_1617659373629581344[29] = 0;
   out_1617659373629581344[30] = 1;
   out_1617659373629581344[31] = 0;
   out_1617659373629581344[32] = 0;
   out_1617659373629581344[33] = 0;
   out_1617659373629581344[34] = 0;
   out_1617659373629581344[35] = 0;
   out_1617659373629581344[36] = 0;
   out_1617659373629581344[37] = 0;
   out_1617659373629581344[38] = 0;
   out_1617659373629581344[39] = 0;
   out_1617659373629581344[40] = 0;
   out_1617659373629581344[41] = 0;
   out_1617659373629581344[42] = 0;
   out_1617659373629581344[43] = 0;
   out_1617659373629581344[44] = 0;
   out_1617659373629581344[45] = 0;
   out_1617659373629581344[46] = 0;
   out_1617659373629581344[47] = 0;
   out_1617659373629581344[48] = 0;
   out_1617659373629581344[49] = 0;
   out_1617659373629581344[50] = 0;
   out_1617659373629581344[51] = 0;
   out_1617659373629581344[52] = 0;
   out_1617659373629581344[53] = 1;
   out_1617659373629581344[54] = 0;
   out_1617659373629581344[55] = 0;
   out_1617659373629581344[56] = 0;
   out_1617659373629581344[57] = 0;
   out_1617659373629581344[58] = 0;
   out_1617659373629581344[59] = 0;
   out_1617659373629581344[60] = 0;
   out_1617659373629581344[61] = 0;
   out_1617659373629581344[62] = 0;
   out_1617659373629581344[63] = 0;
   out_1617659373629581344[64] = 0;
   out_1617659373629581344[65] = 0;
}
void h_32(double *state, double *unused, double *out_4374390145520695667) {
   out_4374390145520695667[0] = state[3];
   out_4374390145520695667[1] = state[4];
   out_4374390145520695667[2] = state[5];
   out_4374390145520695667[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8532523877323697700) {
   out_8532523877323697700[0] = 0;
   out_8532523877323697700[1] = 0;
   out_8532523877323697700[2] = 0;
   out_8532523877323697700[3] = 1;
   out_8532523877323697700[4] = 0;
   out_8532523877323697700[5] = 0;
   out_8532523877323697700[6] = 0;
   out_8532523877323697700[7] = 0;
   out_8532523877323697700[8] = 0;
   out_8532523877323697700[9] = 0;
   out_8532523877323697700[10] = 0;
   out_8532523877323697700[11] = 0;
   out_8532523877323697700[12] = 0;
   out_8532523877323697700[13] = 0;
   out_8532523877323697700[14] = 0;
   out_8532523877323697700[15] = 0;
   out_8532523877323697700[16] = 0;
   out_8532523877323697700[17] = 0;
   out_8532523877323697700[18] = 0;
   out_8532523877323697700[19] = 0;
   out_8532523877323697700[20] = 0;
   out_8532523877323697700[21] = 0;
   out_8532523877323697700[22] = 0;
   out_8532523877323697700[23] = 0;
   out_8532523877323697700[24] = 0;
   out_8532523877323697700[25] = 0;
   out_8532523877323697700[26] = 1;
   out_8532523877323697700[27] = 0;
   out_8532523877323697700[28] = 0;
   out_8532523877323697700[29] = 0;
   out_8532523877323697700[30] = 0;
   out_8532523877323697700[31] = 0;
   out_8532523877323697700[32] = 0;
   out_8532523877323697700[33] = 0;
   out_8532523877323697700[34] = 0;
   out_8532523877323697700[35] = 0;
   out_8532523877323697700[36] = 0;
   out_8532523877323697700[37] = 0;
   out_8532523877323697700[38] = 0;
   out_8532523877323697700[39] = 0;
   out_8532523877323697700[40] = 0;
   out_8532523877323697700[41] = 0;
   out_8532523877323697700[42] = 0;
   out_8532523877323697700[43] = 0;
   out_8532523877323697700[44] = 0;
   out_8532523877323697700[45] = 0;
   out_8532523877323697700[46] = 0;
   out_8532523877323697700[47] = 0;
   out_8532523877323697700[48] = 0;
   out_8532523877323697700[49] = 1;
   out_8532523877323697700[50] = 0;
   out_8532523877323697700[51] = 0;
   out_8532523877323697700[52] = 0;
   out_8532523877323697700[53] = 0;
   out_8532523877323697700[54] = 0;
   out_8532523877323697700[55] = 0;
   out_8532523877323697700[56] = 0;
   out_8532523877323697700[57] = 0;
   out_8532523877323697700[58] = 0;
   out_8532523877323697700[59] = 0;
   out_8532523877323697700[60] = 0;
   out_8532523877323697700[61] = 0;
   out_8532523877323697700[62] = 0;
   out_8532523877323697700[63] = 0;
   out_8532523877323697700[64] = 0;
   out_8532523877323697700[65] = 0;
   out_8532523877323697700[66] = 0;
   out_8532523877323697700[67] = 0;
   out_8532523877323697700[68] = 0;
   out_8532523877323697700[69] = 0;
   out_8532523877323697700[70] = 0;
   out_8532523877323697700[71] = 0;
   out_8532523877323697700[72] = 1;
   out_8532523877323697700[73] = 0;
   out_8532523877323697700[74] = 0;
   out_8532523877323697700[75] = 0;
   out_8532523877323697700[76] = 0;
   out_8532523877323697700[77] = 0;
   out_8532523877323697700[78] = 0;
   out_8532523877323697700[79] = 0;
   out_8532523877323697700[80] = 0;
   out_8532523877323697700[81] = 0;
   out_8532523877323697700[82] = 0;
   out_8532523877323697700[83] = 0;
   out_8532523877323697700[84] = 0;
   out_8532523877323697700[85] = 0;
   out_8532523877323697700[86] = 0;
   out_8532523877323697700[87] = 0;
}
void h_13(double *state, double *unused, double *out_3411942636730044317) {
   out_3411942636730044317[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3411942636730044317[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3411942636730044317[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8102370594677986781) {
   out_8102370594677986781[0] = 0;
   out_8102370594677986781[1] = 0;
   out_8102370594677986781[2] = 0;
   out_8102370594677986781[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8102370594677986781[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8102370594677986781[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8102370594677986781[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8102370594677986781[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8102370594677986781[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8102370594677986781[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8102370594677986781[10] = 0;
   out_8102370594677986781[11] = 0;
   out_8102370594677986781[12] = 0;
   out_8102370594677986781[13] = 0;
   out_8102370594677986781[14] = 0;
   out_8102370594677986781[15] = 0;
   out_8102370594677986781[16] = 0;
   out_8102370594677986781[17] = 0;
   out_8102370594677986781[18] = 0;
   out_8102370594677986781[19] = 0;
   out_8102370594677986781[20] = 0;
   out_8102370594677986781[21] = 0;
   out_8102370594677986781[22] = 0;
   out_8102370594677986781[23] = 0;
   out_8102370594677986781[24] = 0;
   out_8102370594677986781[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8102370594677986781[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8102370594677986781[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8102370594677986781[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8102370594677986781[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8102370594677986781[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8102370594677986781[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8102370594677986781[32] = 0;
   out_8102370594677986781[33] = 0;
   out_8102370594677986781[34] = 0;
   out_8102370594677986781[35] = 0;
   out_8102370594677986781[36] = 0;
   out_8102370594677986781[37] = 0;
   out_8102370594677986781[38] = 0;
   out_8102370594677986781[39] = 0;
   out_8102370594677986781[40] = 0;
   out_8102370594677986781[41] = 0;
   out_8102370594677986781[42] = 0;
   out_8102370594677986781[43] = 0;
   out_8102370594677986781[44] = 0;
   out_8102370594677986781[45] = 0;
   out_8102370594677986781[46] = 0;
   out_8102370594677986781[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8102370594677986781[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8102370594677986781[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8102370594677986781[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8102370594677986781[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8102370594677986781[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8102370594677986781[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8102370594677986781[54] = 0;
   out_8102370594677986781[55] = 0;
   out_8102370594677986781[56] = 0;
   out_8102370594677986781[57] = 0;
   out_8102370594677986781[58] = 0;
   out_8102370594677986781[59] = 0;
   out_8102370594677986781[60] = 0;
   out_8102370594677986781[61] = 0;
   out_8102370594677986781[62] = 0;
   out_8102370594677986781[63] = 0;
   out_8102370594677986781[64] = 0;
   out_8102370594677986781[65] = 0;
}
void h_14(double *state, double *unused, double *out_317907328216681576) {
   out_317907328216681576[0] = state[10];
   out_317907328216681576[1] = state[11];
   out_317907328216681576[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4743131784372598075) {
   out_4743131784372598075[0] = 0;
   out_4743131784372598075[1] = 0;
   out_4743131784372598075[2] = 0;
   out_4743131784372598075[3] = 0;
   out_4743131784372598075[4] = 0;
   out_4743131784372598075[5] = 0;
   out_4743131784372598075[6] = 0;
   out_4743131784372598075[7] = 0;
   out_4743131784372598075[8] = 0;
   out_4743131784372598075[9] = 0;
   out_4743131784372598075[10] = 1;
   out_4743131784372598075[11] = 0;
   out_4743131784372598075[12] = 0;
   out_4743131784372598075[13] = 0;
   out_4743131784372598075[14] = 0;
   out_4743131784372598075[15] = 0;
   out_4743131784372598075[16] = 0;
   out_4743131784372598075[17] = 0;
   out_4743131784372598075[18] = 0;
   out_4743131784372598075[19] = 0;
   out_4743131784372598075[20] = 0;
   out_4743131784372598075[21] = 0;
   out_4743131784372598075[22] = 0;
   out_4743131784372598075[23] = 0;
   out_4743131784372598075[24] = 0;
   out_4743131784372598075[25] = 0;
   out_4743131784372598075[26] = 0;
   out_4743131784372598075[27] = 0;
   out_4743131784372598075[28] = 0;
   out_4743131784372598075[29] = 0;
   out_4743131784372598075[30] = 0;
   out_4743131784372598075[31] = 0;
   out_4743131784372598075[32] = 0;
   out_4743131784372598075[33] = 1;
   out_4743131784372598075[34] = 0;
   out_4743131784372598075[35] = 0;
   out_4743131784372598075[36] = 0;
   out_4743131784372598075[37] = 0;
   out_4743131784372598075[38] = 0;
   out_4743131784372598075[39] = 0;
   out_4743131784372598075[40] = 0;
   out_4743131784372598075[41] = 0;
   out_4743131784372598075[42] = 0;
   out_4743131784372598075[43] = 0;
   out_4743131784372598075[44] = 0;
   out_4743131784372598075[45] = 0;
   out_4743131784372598075[46] = 0;
   out_4743131784372598075[47] = 0;
   out_4743131784372598075[48] = 0;
   out_4743131784372598075[49] = 0;
   out_4743131784372598075[50] = 0;
   out_4743131784372598075[51] = 0;
   out_4743131784372598075[52] = 0;
   out_4743131784372598075[53] = 0;
   out_4743131784372598075[54] = 0;
   out_4743131784372598075[55] = 0;
   out_4743131784372598075[56] = 1;
   out_4743131784372598075[57] = 0;
   out_4743131784372598075[58] = 0;
   out_4743131784372598075[59] = 0;
   out_4743131784372598075[60] = 0;
   out_4743131784372598075[61] = 0;
   out_4743131784372598075[62] = 0;
   out_4743131784372598075[63] = 0;
   out_4743131784372598075[64] = 0;
   out_4743131784372598075[65] = 0;
}
void h_33(double *state, double *unused, double *out_7166630455467735088) {
   out_7166630455467735088[0] = state[16];
   out_7166630455467735088[1] = state[17];
   out_7166630455467735088[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1532897631009276260) {
   out_1532897631009276260[0] = 0;
   out_1532897631009276260[1] = 0;
   out_1532897631009276260[2] = 0;
   out_1532897631009276260[3] = 0;
   out_1532897631009276260[4] = 0;
   out_1532897631009276260[5] = 0;
   out_1532897631009276260[6] = 0;
   out_1532897631009276260[7] = 0;
   out_1532897631009276260[8] = 0;
   out_1532897631009276260[9] = 0;
   out_1532897631009276260[10] = 0;
   out_1532897631009276260[11] = 0;
   out_1532897631009276260[12] = 0;
   out_1532897631009276260[13] = 0;
   out_1532897631009276260[14] = 0;
   out_1532897631009276260[15] = 0;
   out_1532897631009276260[16] = 1;
   out_1532897631009276260[17] = 0;
   out_1532897631009276260[18] = 0;
   out_1532897631009276260[19] = 0;
   out_1532897631009276260[20] = 0;
   out_1532897631009276260[21] = 0;
   out_1532897631009276260[22] = 0;
   out_1532897631009276260[23] = 0;
   out_1532897631009276260[24] = 0;
   out_1532897631009276260[25] = 0;
   out_1532897631009276260[26] = 0;
   out_1532897631009276260[27] = 0;
   out_1532897631009276260[28] = 0;
   out_1532897631009276260[29] = 0;
   out_1532897631009276260[30] = 0;
   out_1532897631009276260[31] = 0;
   out_1532897631009276260[32] = 0;
   out_1532897631009276260[33] = 0;
   out_1532897631009276260[34] = 0;
   out_1532897631009276260[35] = 0;
   out_1532897631009276260[36] = 0;
   out_1532897631009276260[37] = 0;
   out_1532897631009276260[38] = 0;
   out_1532897631009276260[39] = 1;
   out_1532897631009276260[40] = 0;
   out_1532897631009276260[41] = 0;
   out_1532897631009276260[42] = 0;
   out_1532897631009276260[43] = 0;
   out_1532897631009276260[44] = 0;
   out_1532897631009276260[45] = 0;
   out_1532897631009276260[46] = 0;
   out_1532897631009276260[47] = 0;
   out_1532897631009276260[48] = 0;
   out_1532897631009276260[49] = 0;
   out_1532897631009276260[50] = 0;
   out_1532897631009276260[51] = 0;
   out_1532897631009276260[52] = 0;
   out_1532897631009276260[53] = 0;
   out_1532897631009276260[54] = 0;
   out_1532897631009276260[55] = 0;
   out_1532897631009276260[56] = 0;
   out_1532897631009276260[57] = 0;
   out_1532897631009276260[58] = 0;
   out_1532897631009276260[59] = 0;
   out_1532897631009276260[60] = 0;
   out_1532897631009276260[61] = 0;
   out_1532897631009276260[62] = 1;
   out_1532897631009276260[63] = 0;
   out_1532897631009276260[64] = 0;
   out_1532897631009276260[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5373476707567852118) {
  H(in_vec, out_5373476707567852118);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4552411415356430197) {
  err_fun(nom_x, delta_x, out_4552411415356430197);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_649318714918938330) {
  inv_err_fun(nom_x, true_x, out_649318714918938330);
}
void live_H_mod_fun(double *state, double *out_5061695866448667952) {
  H_mod_fun(state, out_5061695866448667952);
}
void live_f_fun(double *state, double dt, double *out_1513825950941167469) {
  f_fun(state,  dt, out_1513825950941167469);
}
void live_F_fun(double *state, double dt, double *out_3551463619284444433) {
  F_fun(state,  dt, out_3551463619284444433);
}
void live_h_4(double *state, double *unused, double *out_7554895586088319024) {
  h_4(state, unused, out_7554895586088319024);
}
void live_H_4(double *state, double *unused, double *out_4984321431002188720) {
  H_4(state, unused, out_4984321431002188720);
}
void live_h_9(double *state, double *unused, double *out_317907328216681576) {
  h_9(state, unused, out_317907328216681576);
}
void live_H_9(double *state, double *unused, double *out_4743131784372598075) {
  H_9(state, unused, out_4743131784372598075);
}
void live_h_10(double *state, double *unused, double *out_5652489443217293721) {
  h_10(state, unused, out_5652489443217293721);
}
void live_H_10(double *state, double *unused, double *out_3153913664865385503) {
  H_10(state, unused, out_3153913664865385503);
}
void live_h_12(double *state, double *unused, double *out_1650444621024254768) {
  h_12(state, unused, out_1650444621024254768);
}
void live_H_12(double *state, double *unused, double *out_4363222405954595053) {
  H_12(state, unused, out_4363222405954595053);
}
void live_h_35(double *state, double *unused, double *out_4652214696272546815) {
  h_35(state, unused, out_4652214696272546815);
}
void live_H_35(double *state, double *unused, double *out_1617659373629581344) {
  H_35(state, unused, out_1617659373629581344);
}
void live_h_32(double *state, double *unused, double *out_4374390145520695667) {
  h_32(state, unused, out_4374390145520695667);
}
void live_H_32(double *state, double *unused, double *out_8532523877323697700) {
  H_32(state, unused, out_8532523877323697700);
}
void live_h_13(double *state, double *unused, double *out_3411942636730044317) {
  h_13(state, unused, out_3411942636730044317);
}
void live_H_13(double *state, double *unused, double *out_8102370594677986781) {
  H_13(state, unused, out_8102370594677986781);
}
void live_h_14(double *state, double *unused, double *out_317907328216681576) {
  h_14(state, unused, out_317907328216681576);
}
void live_H_14(double *state, double *unused, double *out_4743131784372598075) {
  H_14(state, unused, out_4743131784372598075);
}
void live_h_33(double *state, double *unused, double *out_7166630455467735088) {
  h_33(state, unused, out_7166630455467735088);
}
void live_H_33(double *state, double *unused, double *out_1532897631009276260) {
  H_33(state, unused, out_1532897631009276260);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
